# ----------------------------------------------------------------------------------
#          ---        
#        / o o \    Snakemake workflow phylo-BEAST
#        V\ Y /V    Snakemake workflow to run beast2 analysis with genetic sequences 
#    (\   / - \     
#     )) /    |     
#     ((/__) ||     Code by Ceci VA 
# -----------------------------------------------------------------------------------


import urllib, json
import pandas as pd
from snakemake.utils import validate, min_version

min_version("7.11.0")


configfile: "config/config.yaml"

localrules: all, clean



DATASETS = list(config["dataset"].keys())
# ANALYSIS = config["beast"]["run"]

# BEAST_SEED = range(1, (config["beast"].get("chains")) + 1)

all_files = []
for dataset in DATASETS:
    if  config["dataset"][dataset].get("replicates") is not None:
        all_files.append(expand("results/" + dataset + "/data/aligned.{dseed}.fasta", dseed = range(0, config["dataset"][dataset].get("replicates"))))
    else:

        all_files.append("results/" + dataset + "/data/aligned.fasta")


rule all:
    input:
        all_files

rule clean:
    shell:
        '''
        rm -rf results logs
        '''

# Include workflow rules
include: "rules/common.smk"

if config["output"]["data_curation"] and not config["output"]["lapis_import"]:
    include: "rules/sample_selection.smk"
    include: "rules/sequences_qc.smk"
    include: "rules/sequences_import.smk"
    
    if config["output"]["align"]:
        include: "rules/alignment.smk"

include: "rules/sample_combine.smk"
include: "rules/subsampling.smk"

if config["output"]["lapis_import"]:
    # use rules from talking to lapis workflow
    module lapis_import:
        # snakefile: github("cecivale/talking-to-lapis", path="python-snakemake/workflow/Snakefile", tag = "v0.1") 
        snakefile: "/Users/ceciliav/Tools/talking-to-LAPIS/python-snakemake/workflow/Snakefile"
        config: config

    use rule load_metadata from lapis_import as lapis_sample_selection 

    use rule load_sequences from lapis_import as lapis_sequences_import with:
        input:
            ids = _get_sequence_ids
        output:
            alignment = "results/{dataset}/data/aligned{sufix,.*}.fasta"
        log:
            "logs/lapis_import_seqs_{dataset}_{sufix,.*}.txt" 


if config["output"]["mask"]:
        include: "rules/mask.smk"

# If ml tree reconstruction
#if config["output"]["phylogenetics"]:
    #include: "rules/phylogenetics.smk"

# If BEAST2 analysis
#if config["output"]["phylodynamics"]:
    #include: "rules/phylodynamics.smk"

