# ----------------------------------------------------------------------------------
#          ---        
#        / o o \    Snakemake workflow phylo-BEAST
#        V\ Y /V    Snakemake workflow to run beast2 analysis with genetic sequences 
#    (\   / - \     
#     )) /    |     
#     ((/__) ||     Code by Ceci VA 
# -----------------------------------------------------------------------------------


import urllib, json
import pandas as pd
from snakemake.utils import validate, min_version

min_version("7.11.0")

# add config files
configfile: "config/config.yaml"

if config.get("config_datasets") is not None:
    configfile: config["config_datasets"]

if config.get("config_analyses") is not None:
    configfile: config["config_analyses"]

# rules to run locally
localrules: all, clean

# wildcards
wildcard_constraints:
    dataset="[A-Za-z0-9_]+",
    analysis="[A-Za-z0-9_]+",
    sufix="[0-9.]+",

# Final output files
all_files = []
METHODS = config["run"].keys()
for method in METHODS:
    ANALYSES = config["run"][method].keys()
    for analysis in ANALYSES:
        DATASETS = config["run"][method][analysis]
        for dataset in DATASETS:
            DATA_SEED = ["." + str(i) for i in range(0, config["datasets"][dataset].get("replicates", 0))] or ""
            FILE_TYPE = config["target_files"][method]
            files = expand("results/analysis/" + method + "/" + analysis + "/" + dataset + "{dseed}.{filetype}", 
                dseed = DATA_SEED, filetype = FILE_TYPE)
            all_files += files
print(all_files)

rule all:
    input:
        all_files
    default_target: True

rule clean:
    shell:
        '''
        rm -rf results logs
        '''

# Include workflow rules
include: "rules/common.smk"

include: "rules/sample_selection.smk"
# include: "rules/sequences_qc.smk" #TODO
include: "rules/sample_combine.smk" 
include: "rules/subsampling.smk" #TODO proportional subsampling

include: "rules/sequences_import.smk"

module lapis_import:
    # snakefile: github("cecivale/talking-to-lapis", path="python-snakemake/workflow/Snakefile", tag = "v0.1") 
    snakefile: "/Users/ceciliav/Tools/talking-to-LAPIS/python-snakemake/workflow/Snakefile"
    config: config

use rule load_metadata from lapis_import as lapis_select_samples

use rule load_sequences from lapis_import as lapis_import_sequences with: 
    input:
        ids = _get_sequence_ids
    output:
        alignment = "results/data/{dataset}/aligned{sufix,.*}.fasta"
    log:
        "logs/lapis_import_seqs_{dataset}_{sufix,.*}.txt" 

ruleorder: select_samples > lapis_select_samples 
ruleorder: select_sequences > lapis_import_sequences 

if config["preprocessing"]["align"]:
    include: "rules/alignment.smk"
    ruleorder: align > lapis_import_sequences 


if config["preprocessing"]["mask"]:
        include: "rules/mask.smk"

include: "rules/phylogenetics.smk"
include: "rules/phylodynamics.smk"
ruleorder: beast > combine_chains 

# TODO change from shell directive to script so they are accessible from module definition
